// Online C compiler to run C program online
#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#define MAX_ITEMS 100

typedef struct {
    int id;
    char name[50];
    int quantity;
    float price;
} Item;

Item inventory[MAX_ITEMS];
int itemCount = 0;

// Function Prototypes
void addItem();
void viewInventory();
void searchItem();
void updateItem();
void deleteItem();
void calculateTotalValue();
void displayMenu();

int main() {
    int choice;

    while (1) {
        displayMenu();
        printf("\nEnter your choice: ");
        if (scanf("%d", &choice) != 1) {
            printf("Invalid input. Please enter a number.\n");
            while (getchar() != '\n'); // Clear input buffer
            continue;
        }

        switch (choice) {
            case 1:
                addItem();
                break;
            case 2:
                viewInventory();
                break;
            case 3:
                searchItem();
                break;
            case 4:
                updateItem();
                break;
            case 5:
                deleteItem();
                break;
            case 6:
                calculateTotalValue();
                break;
            case 7:
                printf("Exiting program. Goodbye!\n");
                return 0;
            default:
                printf("Invalid choice. Please try again.\n");
        }
    }
}

void displayMenu() {
    printf("\n==== Inventory Management System ====\n");
    printf("1. Add Item\n");
    printf("2. View Inventory\n");
    printf("3. Search Item\n");
    printf("4. Update Item\n");
    printf("5. Delete Item\n");
    printf("6. Calculate Total Inventory Value\n");
    printf("7. Exit\n");
}

void addItem() {
    if (itemCount >= MAX_ITEMS) {
        printf("Inventory is full. Cannot add more items.\n");
        return;
    }

    Item newItem;
    printf("Enter Item ID: ");
    scanf("%d", &newItem.id);

    for (int i = 0; i < itemCount; i++) {
        if (inventory[i].id == newItem.id) {
            printf("Error: An item with this ID already exists.\n");
            return;
        }
    }

    printf("Enter Item Name: ");
    scanf(" %[^\n]", newItem.name);
    printf("Enter Quantity: ");
    scanf("%d", &newItem.quantity);
    printf("Enter Price: ");
    scanf("%f", &newItem.price);

    inventory[itemCount++] = newItem;
    printf("Item added successfully.\n");
}

void viewInventory() {
    if (itemCount == 0) {
        printf("Inventory is empty.\n");
        return;
    }

    printf("\nID\tName\t\tQuantity\tPrice\n");
    printf("---------------------------------------------\n");
    for (int i = 0; i < itemCount; i++) {
        printf("%d\t%s\t\t%d\t\t%.2f\n", inventory[i].id, inventory[i].name, inventory[i].quantity, inventory[i].price);
    }
}

void searchItem() {
    int searchId;
    printf("Enter Item ID to search: ");
    scanf("%d", &searchId);

    for (int i = 0; i < itemCount; i++) {
        if (inventory[i].id == searchId) {
            printf("Item found:\n");
            printf("ID: %d\nName: %s\nQuantity: %d\nPrice: %.2f\n", inventory[i].id, inventory[i].name, inventory[i].quantity, inventory[i].price);
            return;
        }
    }
    printf("Item with ID %d not found.\n", searchId);
}

void updateItem() {
    int updateId;
    printf("Enter Item ID to update: ");
    scanf("%d", &updateId);

    for (int i = 0; i < itemCount; i++) {
        if (inventory[i].id == updateId) {
            printf("Enter new Name: ");
            scanf(" %[^\n]", inventory[i].name);
            printf("Enter new Quantity: ");
            scanf("%d", &inventory[i].quantity);
            printf("Enter new Price: ");
            scanf("%f", &inventory[i].price);
            printf("Item updated successfully.\n");
            return;
        }
    }
    printf("Item with ID %d not found.\n", updateId);
}

void deleteItem() {
    int deleteId;
    printf("Enter Item ID to delete: ");
    scanf("%d", &deleteId);

    for (int i = 0; i < itemCount; i++) {
        if (inventory[i].id == deleteId) {
            for (int j = i; j < itemCount - 1; j++) {
                inventory[j] = inventory[j + 1];
            }
            itemCount--;
            printf("Item deleted successfully.\n");
            return;
        }
    }
    printf("Item with ID %d not found.\n", deleteId);
}

void calculateTotalValue() {
    float totalValue = 0.0;

    for (int i = 0; i < itemCount; i++) {
        totalValue += inventory[i].quantity * inventory[i].price;
    }

    printf("Total Inventory Value: %.2f\n", totalValue);
}
